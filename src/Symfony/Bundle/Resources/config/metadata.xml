<?xml version="1.0" encoding="UTF-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="AutoMapper\Extractor\SourceTargetMappingExtractor">
            <argument type="service" id="AutoMapper\Configuration" />
            <argument type="service" id="automapper.property_info" />
            <argument type="service" id="automapper.property_info.reflection_extractor" />
            <argument type="service" id="automapper.property_info.reflection_extractor" />
        </service>

        <service id="AutoMapper\Extractor\FromSourceMappingExtractor">
            <argument type="service" id="AutoMapper\Configuration" />
            <argument type="service" id="automapper.property_info" />
            <argument type="service" id="automapper.property_info.reflection_extractor" />
            <argument type="service" id="automapper.property_info.reflection_extractor" />
        </service>

        <service id="AutoMapper\Extractor\FromTargetMappingExtractor">
            <argument type="service" id="AutoMapper\Configuration" />
            <argument type="service" id="automapper.property_info" />
            <argument type="service" id="automapper.property_info.reflection_extractor" />
            <argument type="service" id="automapper.property_info.reflection_extractor" />
        </service>

        <service id="AutoMapper\Metadata\MetadataRegistry">
            <argument type="service" id="AutoMapper\Configuration" />
            <argument type="service" id="AutoMapper\Extractor\SourceTargetMappingExtractor" />
            <argument type="service" id="AutoMapper\Extractor\FromSourceMappingExtractor" />
            <argument type="service" id="AutoMapper\Extractor\FromTargetMappingExtractor" />
            <argument type="service" id="AutoMapper\Transformer\TransformerFactoryInterface" />
            <argument type="service" id="Symfony\Component\EventDispatcher\EventDispatcherInterface" />
            <argument />
        </service>
    </services>
</container>
